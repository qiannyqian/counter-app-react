{"ast":null,"code":"import _defineProperty from \"/Users/qiannyqian/test-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/qiannyqian/test-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/qiannyqian/test-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Button from './components/Button';\nimport Counter from './components/Counter';\nimport './App.css';\n\nfunction App() {\n  // const abc = useState(1);\n  // typeof abc; // array;\n  // abc[0]; // state value itself\n  // abc[1]; // state updater for this state\n  const _useState = useState([{\n    count: 0\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        counters = _useState2[0],\n        setCounters = _useState2[1];\n\n  const addCounter = () => {\n    //add obj to counters array\n    setCounters(counters => [...counters, {\n      count: 0\n    }]);\n  };\n\n  const setCount = counterIndex => {\n    const duplicateCounters = [...counters];\n\n    const duplicateClickedCounter = _objectSpread({}, counters[counterIndex]);\n\n    duplicateClickedCounter.count += 1;\n    duplicateCounters[counterIndex] = duplicateClickedCounter;\n    setCounters(duplicateCounters);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    buttonLabel: \"Add Counter!\",\n    onClick: addCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonLabel: \"+1\",\n    onClick: addCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonLabel: \"+2\",\n    onClick: addCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonLabel: \"+4\",\n    onClick: addCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), counters.map((counter, index) => React.createElement(Counter, {\n    key: index,\n    count: counter.count,\n    setCount: () => setCount(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/qiannyqian/test-app/src/App.js"],"names":["React","useState","Button","Counter","App","count","counters","setCounters","addCounter","setCount","counterIndex","duplicateCounters","duplicateClickedCounter","display","justifyContent","map","counter","index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AAJa,oBAMmBH,QAAQ,CAAC,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAD,CAN3B;AAAA;AAAA,QAMNC,QANM;AAAA,QAMIC,WANJ;;AAQb,QAAMC,UAAU,GAAG,MAAM;AACvB;AACAD,IAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAc;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAd,CAAb,CAAX;AACD,GAHD;;AAKA,QAAMI,QAAQ,GAAGC,YAAY,IAAI;AAC/B,UAAMC,iBAAiB,GAAG,CAAC,GAAGL,QAAJ,CAA1B;;AACA,UAAMM,uBAAuB,qBAAQN,QAAQ,CAACI,YAAD,CAAhB,CAA7B;;AACAE,IAAAA,uBAAuB,CAACP,KAAxB,IAAiC,CAAjC;AACAM,IAAAA,iBAAiB,CAACD,YAAD,CAAjB,GAAkCE,uBAAlC;AACAL,IAAAA,WAAW,CAACI,iBAAD,CAAX;AACD,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,cAApB;AAAmC,IAAA,OAAO,EAAEN,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,IAApB;AAAyB,IAAA,OAAO,EAAEA,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,IAApB;AAAyB,IAAA,OAAO,EAAEA,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,IAApB;AAAyB,IAAA,OAAO,EAAEA,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,EAQGF,QAAQ,CAACS,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAED,OAAO,CAACX,KAFjB;AAGE,IAAA,QAAQ,EAAE,MAAMI,QAAQ,CAACQ,KAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARH,CADF;AAkBD;;AAED,eAAeb,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from './components/Button';\nimport Counter from './components/Counter';\n\nimport './App.css';\n\nfunction App() {\n  // const abc = useState(1);\n  // typeof abc; // array;\n  // abc[0]; // state value itself\n  // abc[1]; // state updater for this state\n\n  const [counters, setCounters] = useState([{ count: 0 }]);\n\n  const addCounter = () => {\n    //add obj to counters array\n    setCounters(counters => [...counters, { count: 0 }]);\n  };\n\n  const setCount = counterIndex => {\n    const duplicateCounters = [...counters];\n    const duplicateClickedCounter = { ...counters[counterIndex] };\n    duplicateClickedCounter.count += 1;\n    duplicateCounters[counterIndex] = duplicateClickedCounter;\n    setCounters(duplicateCounters);\n  };\n\n  return (\n    <div>\n      {/* this button will be used to add more counters */}\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Button buttonLabel=\"Add Counter!\" onClick={addCounter} />\n        <Button buttonLabel=\"+1\" onClick={addCounter} />\n        <Button buttonLabel=\"+2\" onClick={addCounter} />\n        <Button buttonLabel=\"+4\" onClick={addCounter} />\n      </div>\n      {counters.map((counter, index) => (\n        <Counter\n          key={index}\n          count={counter.count}\n          setCount={() => setCount(index)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}